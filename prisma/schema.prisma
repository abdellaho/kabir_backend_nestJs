// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Pays {
  id          Int         @id @default(autoincrement())
  pays       String  
  villes  Ville[]
}

model Ville {
  id          Int         @id @default(autoincrement())
  nomVille       String      
  pays        Pays        @relation(fields: [paysId], references: [id])
  paysId  Int
  etablissements  Etablissement[]
}

model Etablissement {
  id              Int    @id @default(autoincrement())
  nom             String
  cheminBD        String
  tel             String
  fax             String
  gsm             String
  email           String
	siteweb         String
	cnss            String
	patente         String
  adresse         String
  raisonSocial    String
	ice             String
	ife             String
  port            Int
  hostMail        String
  paswordMail     String
  paswordMailFake String
  fromMail        String
  userMail        String
  capitale        String
  pourcentageLiv  String
  lienDbDump      String
  lienBackupDB    String
  lundi           Boolean
  mardi           Boolean
  mercredi        Boolean
  jeudi           Boolean
  vendredi        Boolean
  samedi          Boolean
  dimanche        Boolean
  dateTime        DateTime
  typeExec        Int
  numJour         Int
  ville           Ville     @relation(fields: [villeId], references: [id])
  villeId  Int
}

model ParamPrime {
  id              Int    @id @default(autoincrement())
  montant         Decimal
  prime           Decimal
}

model ParamCommiss {
  id              Int    @id @default(autoincrement())
  mntDepart         Decimal
  mntFin           Decimal
  pourc           Decimal
}

model ParamPrimeProduit {
  id              Int    @id @default(autoincrement())
  montant         Decimal
  prime           Decimal
  stock         Stock     @relation(fields: [stockId], references: [id])
  stockId       Int
}

model Repertoire {
   id              Int    @id @default(autoincrement())
   stocks           Stock[]
}

model Stock {
  id              Int    @id @default(autoincrement())
  designation         String
  sysDate             DateTime
  pahtGrossiste           Decimal
  prixCommercial           Decimal
  tva           Decimal
  pattc           Decimal
  pvttc           Decimal
  pvaht           Decimal
  benifice           Decimal
  qteStock        Int
  qtePVMin        Int
  qtePVMin3        Int
  qtePVMin4        Int
  qteFacturer        Int
  prixVentMin1           Decimal
  prixVentMin2           Decimal
  prixVentMin3           Decimal
  prixVentMin4           Decimal
  remiseMax             Decimal
  remiseMax2           Decimal
  remiseMax3           Decimal
  remiseMax4           Decimal
  prixImport            Decimal
  commission            Decimal
  archiver              Int
  qteStockImport              Int
  avecRemise            Boolean
  prixAchatBiggerPrixVente    Boolean
  facturer100       Boolean
  promotion1        String
  promotion2        String
  paramPrimeProduit   ParamPrimeProduit[]
  repertoire        Repertoire          @relation(fields: [repertoireId], references: [id])
  repertoireId      Int
}

/*
private Long id;
	private String designation;
	//private DetailAgenceTransport detailAgenceTransport;
	private String contact1;
	private String contact2;
	private String tel1;
	private String tel2;
	private String tel3;
	private String adresse;
	private String email;
	private int typeRepertoire;
	//private Typerepertoire typerepertoire;
//	private String typePaiement;
	private int typeReglment;

	private String ife;
	private String ice;
	private Ville ville;
	private int archive;
	private Date sysDate;
	private Date dateEntrer;
	private Date dateValidation;
	private String observation;
	private String observationTemp;//Transient
	private double salaireParDefaut;
	private int nbrOperationClient;
	private int bloquer;//0:non bloquer 1:bloquer
	private double mntCnss;
	private Repertoire repertoire;
	private PlanComptable planComptable;
	
	private String contactTel2;
	private String contactTel3;
	
	private boolean commercialExterne;


  public class Employe implements Cloneable, java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	
	private Long id;
	private Repertoire repertoire;
	private Droit droit;
	private int numEmp;
	private int livrerNonLivrerDroit;
	private String codeEmp;
	private String nom;
	private String prenom;
	private String login;
	private String motpass;
	private String email;
	private int typeUser; 
	private boolean etatCompte;
	private double validationMnt;
	private String motPassFake;
	private boolean commercial;
	private boolean pvLibre;
	private boolean gerant;
	private boolean magasinier;
	private boolean bulltinPaie;
	private boolean imprimStockSimple;
	private boolean livraisonLimite;



  Droit

  private Long id;
	
	private boolean listRepertoire;
	private boolean listStock;
	private boolean listLivraison;
	private boolean listFacture;
	private boolean listAchatLivraison;
	private boolean listAchatFacture;
	private boolean listAchatLivraisonEtranger;
	
	private boolean ajouterRepertoire;
	private boolean ajouterStock;
	private boolean ajouterLivraison;
	private boolean ajouterFacture;
	private boolean ajouterAchatLivraison;
	private boolean ajouterAchatFacture;
	private boolean ajouterAchatLivraisonEtranger;
	
	private boolean modifRepertoire;
	private boolean modifStock;
	private boolean modifLivraison;
	private boolean modifFacture;
	private boolean modifAchatLivraison;
	private boolean modifAchatFacture;
	private boolean modifAchatLivraisonEtranger;
	
	private boolean suppRepertoire;
	private boolean suppStock;
	private boolean suppLivraison;
	private boolean suppFacture;
	private boolean suppAchatLivraison;
	private boolean suppAchatFacture;
	private boolean suppAchatLivraisonEtranger;
	
	private boolean etatRepertoire;
	private boolean etatStock;
	private boolean etatLivraison;
	private boolean etatFacture;
	private boolean etatAchatLivraison;
	private boolean etatAchatFacture;
	private boolean etatAchatLivraisonEtranger;
	
	private boolean imprimeRepertoire;
	private boolean imprimeStock;
	private boolean imprimeLivraison;
	private boolean imprimeFacture;
	private boolean imprimerAchatLivraison;
	private boolean imprimerAchatFacture;
	private boolean imprimerAchatLivraisonEtranger;
*/