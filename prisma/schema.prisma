// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Pays {
  id          					Int         			@id @default(autoincrement())
  pays       					String  
  villes  						Ville[]
}

model Ville {
  id          					Int         			@id @default(autoincrement())
  nomVille       				String      
  pays        					Pays        			@relation(fields: [paysId], references: [id])
  paysId  						Int
  etablissements  				Etablissement[]
  repertoires   				Repertoire[]
}

model Etablissement {
  id              				Int    			 		  @id @default(autoincrement())
  nom             				String
  cheminBD        				String
  tel             				String
  fax             				String
  gsm             				String
  email           				String
  siteweb         				String
  cnss            				String
  patente         				String
  adresse         				String
  raisonSocial    				String
  ice             				String
  ife             				String
  port            				Int
  hostMail        				String
  paswordMail     				String
  paswordMailFake 				String
  fromMail        				String
  userMail        				String
  capitale        				String
  pourcentageLiv  				String
  lienDbDump      				String
  lienBackupDB   			 	String
  lundi           				Boolean @default(false)
  mardi           				Boolean @default(false)
  mercredi        				Boolean @default(false)
  jeudi           				Boolean @default(false)
  vendredi        				Boolean @default(false)
  samedi          				Boolean @default(false)
  dimanche        				Boolean @default(false)
  dateTime        				DateTime
  typeExec        				Int
  numJour         				Int
  ville           				Ville     				@relation(fields: [villeId], references: [id])
  villeId  						Int
}

model ParamPrime {
  id              				Int    					@id @default(autoincrement())
  montant         				Decimal
  prime           				Decimal
}

model ParamCommiss {
  id              				Int    					@id @default(autoincrement())
  mntDepart         			Decimal
  mntFin           				Decimal
  pourc           				Decimal
}

model ParamPrimeProduit {
  id              				Int    					@id @default(autoincrement())
  montant         				Decimal
  prime           				Decimal
  stock         				Stock     				@relation(fields: [stockId], references: [id])
  stockId       				Int
}

model Repertoire {
   id              				Int    					@id @default(autoincrement())
   designation		 			String
   contact1         			String
   contact2         			String
   tel1             			String
   tel2             			String
   tel3             			String
   adresse         				String
   email           				String
   typeRepertoire   			Int
   typeReglment     			Int
   ife             				String
   ice             				String
   archive         				Int
   sysDate         				DateTime
   dateEntrer      				DateTime @db.Date
   dateValidation  				DateTime
   observation     				String
   salaireParDefaut 			Decimal
   nbrOperationClient 			Int
   bloquer         				Int
   mntCnss         				Decimal
   commercialExterne 			Boolean @default(false)
   contactTel2     				String
   contactTel3     				String
   repertoire         			Repertoire?  			@relation("repertoireToRepertoire", fields: [repertoireId], references: [id])
   repertoireId    				Int?
   ville           				Ville     				@relation(fields: [villeId], references: [id])
   villeId         				Int
   stocks           			Stock[]
   repertoires       			Repertoire[] 			@relation("repertoireToRepertoire")
   employes         			Employe[]
}

model Stock {
  id              				Int    					@id @default(autoincrement())
  designation         			String
  sysDate             			DateTime
  pahtGrossiste           		Decimal
  prixCommercial           		Decimal
  tva           				Decimal
  pattc           				Decimal
  pvttc           				Decimal
  pvaht           				Decimal
  benifice           			Decimal
  qteStock        				Int
  qtePVMin        				Int
  qtePVMin3        				Int
  qtePVMin4        				Int
  qteFacturer        			Int
  prixVentMin1           		Decimal
  prixVentMin2           		Decimal
  prixVentMin3           		Decimal
  prixVentMin4          	 	Decimal
  remiseMax             		Decimal
  remiseMax2           			Decimal
  remiseMax3           			Decimal
  remiseMax4           			Decimal
  prixImport            		Decimal
  commission            		Decimal
  archiver              		Int
  qteStockImport              	Int
  avecRemise            		Boolean @default(false)
  prixAchatBiggerPrixVente    	Boolean @default(false)
  facturer100       			Boolean @default(false)
  promotion1        			String
  promotion2        			String
  paramPrimeProduits   			ParamPrimeProduit[]
  repertoire        			Repertoire          	@relation(fields: [repertoireId], references: [id])
  repertoireId      			Int
}

model Employe {
  id              				Int    					@id @default(autoincrement())
  numEmp           				Int
  livrerNonLivrerDroit 			Int
  codeEmp         				String
  nom             				String
  prenom          				String
  login           				String
  motpass         				String
  email           				String
  typeUser        				Int 
  etatCompte      				Boolean @default(false)
  validationMnt   				Decimal
  motPassFake     				String
  commercial      				Boolean @default(false)
  pvLibre         				Boolean @default(false)
  gerant          				Boolean @default(false)
  magasinier      				Boolean @default(false)
  bulltinPaie     				Boolean @default(false)
  imprimStockSimple 			Boolean @default(false)
  livraisonLimite 				Boolean @default(false)
  repertoire      				Repertoire  			@relation(fields: [repertoireId], references: [id])
  repertoireId    				Int
}

model Droit {
  id              				Int    					@id @default(autoincrement())
  listRepertoire  				Boolean @default(false)
  listStock       				Boolean @default(false)
  listLivraison   				Boolean @default(false)
  listFacture     				Boolean @default(false)
  listAchatLivraison 			Boolean @default(false)
  listAchatFacture 				Boolean @default(false)
  listAchatLivraisonEtranger   	Boolean @default(false)
  ajouterRepertoire 			Boolean @default(false)
  ajouterStock     				Boolean @default(false)
  ajouterLivraison  			Boolean @default(false)
  ajouterFacture    			Boolean @default(false)
  ajouterAchatLivraison 		Boolean @default(false)
  ajouterAchatFacture 			Boolean @default(false)
  ajouterAchatLivraisonEtranger Boolean @default(false)
  modifRepertoire   			Boolean @default(false)
  modifStock       				Boolean @default(false)
  modifLivraison   				Boolean @default(false)
  modifFacture     				Boolean @default(false)
  modifAchatLivraison 			Boolean @default(false)
  modifAchatFacture 			Boolean @default(false)
  modifAchatLivraisonEtranger   Boolean @default(false)
  suppRepertoire   				Boolean @default(false)
  suppStock       				Boolean @default(false)
  suppLivraison   				Boolean @default(false)
  suppFacture     				Boolean @default(false)
  suppAchatLivraison 			Boolean @default(false)
  suppAchatFacture 				Boolean @default(false)
  suppAchatLivraisonEtranger   	Boolean @default(false)
  etatRepertoire   				Boolean @default(false)
  etatStock       				Boolean @default(false)
  etatLivraison   				Boolean @default(false)
  etatFacture     				Boolean @default(false)
  etatAchatLivraison 			Boolean @default(false)
  etatAchatFacture 				Boolean @default(false)
  etatAchatLivraisonEtranger   	Boolean @default(false)
  imprimeRepertoire 			Boolean @default(false)
  imprimeStock     				Boolean @default(false)
  imprimeLivraison  			Boolean @default(false)
  imprimeFacture    			Boolean @default(false)
  imprimerAchatLivraison 		Boolean @default(false)
  imprimerAchatFacture 			Boolean @default(false)
  imprimerAchatLivraisonEtranger  Boolean @default(false)
}